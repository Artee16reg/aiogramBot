from aiogram import Bot, Dispatcher
from aiogram.filters import CommandStart, Text
from aiogram.types import (KeyboardButton, Message, ReplyKeyboardMarkup,
                           ReplyKeyboardRemove)
from config_data.config import load_config
from aiogram.utils.keyboard import ReplyKeyboardBuilder

bot: Bot = Bot(token=load_config().tg_bot.token)
dp: Dispatcher = Dispatcher()

kb_builder: ReplyKeyboardBuilder = ReplyKeyboardBuilder()
buttons: list[KeyboardButton] = [KeyboardButton(
    text=f'–ö–Ω–æ–ø–∫–∞ {i + 1}') for i in range(8)]
kb_builder.row(*buttons, width=4)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/start"
# –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤ —á–∞—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
@dp.message(CommandStart())
async def process_start_command(message: Message):
    await message.answer(text='–í–æ—Ç —Ç–∞–∫–∞—è –ø–æ–ª—É—á–∞–µ—Ç—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞',
                         reply_markup=kb_builder.as_markup(
                             resize_keyboard=True))


#
# # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –∫–Ω–æ–ø–æ–∫
# button_1: KeyboardButton = KeyboardButton(text='–°–æ–±–∞–∫ ü¶Æ')
# button_2: KeyboardButton = KeyboardButton(text='–û–≥—É—Ä—Ü–æ–≤ ü•í')
#
#
#
# # –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/start"
# # –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤ —á–∞—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
# @dp.message(CommandStart())
# async def process_start_command(message: Message):
#     await message.answer(text='–ß–µ–≥–æ –∫–æ—à–∫–∏ –±–æ—è—Ç—Å—è –±–æ–ª—å—à–µ?',
#                          reply_markup=keyboard)  # –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å one_time_keyboard=True –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è
#
#
# # –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –æ—Ç–≤–µ—Ç "–°–æ–±–∞–∫ ü¶Æ" –∏ —É–¥–∞–ª—è—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
# @dp.message(Text(text='–°–æ–±–∞–∫ ü¶Æ'))
# async def process_dog_answer(message: Message):
#     await message.answer(text='–î–∞, –Ω–µ—Å–æ–º–Ω–µ–Ω–Ω–æ, –∫–æ—à–∫–∏ –±–æ—è—Ç—Å—è —Å–æ–±–∞–∫. '
#                               '–ù–æ –≤—ã –≤–∏–¥–µ–ª–∏ –∫–∞–∫ –æ–Ω–∏ –±–æ—è—Ç—Å—è –æ–≥—É—Ä—Ü–æ–≤?',
#                          reply_markup=ReplyKeyboardRemove())


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –æ—Ç–≤–µ—Ç "–û–≥—É—Ä—Ü–æ–≤ ü•í" –∏ —É–¥–∞–ª—è—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
# @dp.message(Text(text='–û–≥—É—Ä—Ü–æ–≤ ü•í'))
# async def process_cucumber_answer(message: Message):
#     await message.answer(text='–î–∞, –∏–Ω–æ–≥–¥–∞ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ –æ–≥—É—Ä—Ü–æ–≤ '
#                               '–∫–æ—à–∫–∏ –±–æ—è—Ç—Å—è –±–æ–ª—å—à–µ',
#                          reply_markup=ReplyKeyboardRemove())  # –º–æ–∂–Ω–æ –Ω–µ —É–¥–∞–ª—è—Ç—å, –∞ —Å–∫—Ä—ã–≤–∞—Ç—å –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è
#

if __name__ == '__main__':
    dp.run_polling(bot)
